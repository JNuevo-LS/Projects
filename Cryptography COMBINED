alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'

def vigenere_decode(message, keyword):
    translation = ''
    count = 0
    for letter_m in message:
        if letter_m in alphabet:
            letter_m_value = alphabet.find(letter_m)
            translation += alphabet[(letter_m_value + (alphabet.find(keyword[0+count]))) % 26]
            count+=1
            if count == len(keyword):
                count = 0
        else: translation += letter_m
    print(translation)

def vigenere_encode(message, keyword):
    translation = ''
    count = 0
    for letter_m in message:
        if letter_m in alphabet:
            letter_m_value = alphabet.find(letter_m)
            translation += alphabet[(letter_m_value - (alphabet.find(keyword[0+count]))) % 26]
            count+=1
            if count == len(keyword):
                count = 0
        else: translation += letter_m
    print(translation)

def decode_caesar(message, offset):
    translation = ''
    for letter in message:
        if letter in alphabet:
            letter_value = alphabet.find(letter)
            translation += alphabet[(letter_value + offset) % 26]
        else:
            translation += letter
    return translation

def encode_caesar(message, offset):
    translation = ''
    for letter in message:
        if letter in alphabet:
            letter_value = alphabet.find(letter)
            translation += alphabet[(letter_value - offset) % 26]
        else: translation += letter
    return translation


def brute_force(message1):
    count = 0
    while count < 25:
        message_decoded = decode_caesar(message1, count)
        print(message_decoded)
        count += 1
